Links: 
http://rogerdudler.github.io/git-guide/index.pt_BR.html
https://tableless.com.br/tudo-que-voce-queria-saber-sobre-git-e-github-mas-tinha-vergonha-de-perguntar/

configuração inicial:
git config --global user.name "<nome de usuário>"
git config --global user.email "<seu email>"

navegação entre pastas:
cd <nome da pasta ou caminho>
cd .. (sai da pasta)

clear (limpa a tela)

inicialização de um repositório : git init

git status

git add . (adiciona tudo)
git add *.<extensão> (adiciona tudo com essa extensão)
git add readme.txt (adiciona só esse arquivo)


git commit -m "<mensagem que você quiser para identificar o commit>"

git commit -a -m "<mensagem que você quiser para identificar o commit>"
(pula o processo de addss e faz loo tudo )

git diff
git diff --staged
git log
git log -p
git log -p -n (n é o número de commits que você quer ver)
gitk (abre a interface gráfica do git e mostra visualmente os commits)

Revertendo um commit:
git log --pretty=oneline (mostra apenas o código e descrição do commit)


git commit --amend -m "<MENSAGEM>"
(adicionando alterações no último commmit que foi feito)

removendo arquivo da staging area:
git reset HEAD <arquivo>

reveertendo um arquivo ao status do último commit:
git checkout -- <arquivo>

removendo um arquivo do commit:
git rm <arquivo>

Para enviar estas alterações ao seu repositório remoto:
git push origin master

mostra as tags que tem no sistema:
git tag

Cria uma tag o commit atual:
git tag -a <nome da tag> -m "<comentário>"

Atriuindo uma tag a um commit antigo:
git tag -a <nome da tag> <Chave completa ou parcial do commit> -m "<mensagem>"

git show <tag>

Volta ao estado daquela tag:
git checkout <tag>

Voltar a branch master:
git checkout master